import requests
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Output, Input

# Fetch current BTC data from Binance API
def get_btc_data():
    url = "https://api.binance.com/api/v3/ticker/24hr?symbol=BTCUSDT"
    response = requests.get(url)
    data = response.json()
    return data

# Define the Dash application
app = dash.Dash(__name__)
server = app.server  # Expose the server variable for gunicorn

app.layout = html.Div(children=[
    html.H1(children='Bitcoin USDT Spot Price'),

    dcc.Graph(
        id='live-graph',
        config={
            'displayModeBar': False
        }
    ),

    dcc.Interval(
        id='interval-component',
        interval=1*1000,  # 1 second in milliseconds
        n_intervals=0
    )
])

# Callback to update the graph
@app.callback(Output('live-graph', 'figure'),
              [Input('interval-component', 'n_intervals')])
def update_graph_live(n):
    data = get_btc_data()
    fig = go.Figure(
            data=[go.Scatter(
                x=list(range(len(data))),
                y=data,
                mode='lines',
                name='BTC/USDT')
            ])
    return fig

# Main function to run the app
if __name__ == '__main__':
    app.run_server(debug=True)
